services:  

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks: 
      - observability
   
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks: 
      - observability

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - observability

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.13.0
    container_name: filebeat
    user: root
    volumes:
      - ./beats/metric/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data
      - ./logs:/usr/share/filebeat/logs:rw
    command: >
      bash -c "filebeat -e -strict.perms=false"
    environment:
      - ELASTIC_APM_SERVER_URL=http://apm:8200
      - ELASTIC_APM_SERVICE_NAME=filebeat
      - ELASTIC_APM_ENVIRONMENT=production
      - ELASTIC_APM_LOG_LEVEL=debug
    networks:
      - observability
    depends_on:
      - elasticsearch
      - kibana
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.13.0
    container_name: metricbeat
    user: root
    volumes:      
      - /var/run/docker.sock:/var/run/docker.sock
      - ./beats/metric/metricbeat.yml:/tmp/metricbeat.yml
    command: >
      sh -c "cp /tmp/metricbeat.yml /usr/share/metricbeat/metricbeat.yml &&
             chmod go-w /usr/share/metricbeat/metricbeat.yml &&
             metricbeat -e"
    restart: on-failure
    networks: 
      - observability

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:7.13.0
    container_name: heartbeat
    volumes:      
      - ./beats/heartbeat/heartbeat.yml:/tmp/config.yml
    command: >
      sh -c "mkdir -p /tmp/config &&
             cp /tmp/config.yml /tmp/config/heartbeat.yml &&
             chmod go-w /tmp/config/heartbeat.yml &&
             heartbeat -e -c /tmp/config/heartbeat.yml"
    environment: 
      - setup.kibana.host=kibana:5601
    networks: 
      - observability

  apm:
    image: docker.elastic.co/apm/apm-server:7.13.0
    container_name: apm
    volumes:
      - ./apm/apm-server.yml:/tmp/config.yml
    command: >
      sh -c "mkdir -p /tmp/config &&
             cp /tmp/config.yml /tmp/config/apm-server.yml &&
             chmod go-w /tmp/config/apm-server.yml &&
             apm-server -e -c /tmp/config/apm-server.yml"
    ports:
      - "8200:8200"
    restart: on-failure
    networks: 
      - observability

networks:
  observability:
    name: observability
    driver: bridge

volumes:
  filebeat_data: